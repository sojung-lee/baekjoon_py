# 사용할 수 있는 타일의 종류는 2개. (00, 1)
# 두 가지 종류의 타일을 이용하여, N길이의 수열을 만드는 모든 경우의 수를 구해야 합니다.
# 가장 전형적인 동적 프로그래밍 문제
# N이 최대 1,000,000이므로 시간 복잡도 O(N)으로 해결해야 합니다.

# 동적 프로그래밍 문제를 풀기 위해서는 점화식(인접한 항들 사이의 관계식)을 세워야 한다.
# D[i] = '수열의 길이가 i일 때의 경우의 수'라고 하자
# 예를 들어 D[3] = 3, D[4] = 5

# 타일을 왼쪽에서부터 오른쪽으로 이어서 붙인다고 가정
# 생각해 보면, 길이가 i인 수열을 형성하는 방법은 다음의 두 가지 뿐
# i-1 + 1, i-2 + 00
# 따라서 D[i] = D[i-1] + D[i-2]
# 다시 말해 이 문제는 피보나치수열과 동일한 문제

n = int(input())

dp = [0] * 1000001
dp[1] = 1
dp[2] = 2

for i in range(3, n + 1):
    dp[i] = (dp[i-2] + dp[i-1])%15746

print(dp[n])